"""init profile, auth with password and otp

Revision ID: d91aedc23fe3
Revises:
Create Date: 2025-07-27 12:47:40.789138

"""

# for `sqlmodel.sql` access
# pyright: reportAttributeAccessIssue=false
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "d91aedc23fe3"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_user",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auth_user_email"), "auth_user", ["email"], unique=True)
    op.create_index(op.f("ix_auth_user_id"), "auth_user", ["id"], unique=False)
    op.create_table(
        "auth_password",
        sa.Column("password_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("auth_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_auth_password_auth_user_id"), "auth_password", ["auth_user_id"], unique=False
    )
    op.create_index(op.f("ix_auth_password_id"), "auth_password", ["id"], unique=False)
    op.create_table(
        "otp",
        sa.Column("auth_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth_user.id"],
        ),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_index(op.f("ix_otp_auth_user_id"), "otp", ["auth_user_id"], unique=False)
    op.create_table(
        "profile",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("auth_user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_profile_auth_user_id"), "profile", ["auth_user_id"], unique=False)
    op.create_index(op.f("ix_profile_id"), "profile", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_profile_id"), table_name="profile")
    op.drop_index(op.f("ix_profile_auth_user_id"), table_name="profile")
    op.drop_table("profile")
    op.drop_index(op.f("ix_otp_auth_user_id"), table_name="otp")
    op.drop_table("otp")
    op.drop_index(op.f("ix_auth_password_id"), table_name="auth_password")
    op.drop_index(op.f("ix_auth_password_auth_user_id"), table_name="auth_password")
    op.drop_table("auth_password")
    op.drop_index(op.f("ix_auth_user_id"), table_name="auth_user")
    op.drop_index(op.f("ix_auth_user_email"), table_name="auth_user")
    op.drop_table("auth_user")
    # ### end Alembic commands ###
