/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type MessageUnion = MessageParseText | MessageDefineWord;

export interface MessageParseText {
  input: {
    name: "parseText";
    data: {
      text: string;
      /**
       * The list of BCP 47 language tags of the languages that are most commonly used by the user. Take this list as a priority when you try to detect the text language. Although it is not guaranteed to completely match the text languages
       */
      originalLanguages: string[];
      /**
       * The BCP 47 language tag of the language that the user wants to translate the text to.
       */
      translationLanguage: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * The result of parsing the text for futher translation.
   */
  output?: {
    /**
     * Split the text into grammatical parts. A part can be a single word or a famous phrase, it is something that can be defined or translated. Do not include symbols, unless they are the integral part of a phrase.
     */
    definitionParts: {
      text: string;
      /**
       * The BCP 47 language tag of the language of that part. Null for unknown
       */
      language: string | null;
      [k: string]: unknown;
    }[];
    /**
     * The full translation of the text to the requested language.
     */
    translation: {
      text: string;
      /**
       * The BCP 47 language tag of the language of the translation. It should match the requested 'translationLanguage'
       */
      language: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface MessageDefineWord {
  input: {
    name: "defineWord";
    data: {
      wordString: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
