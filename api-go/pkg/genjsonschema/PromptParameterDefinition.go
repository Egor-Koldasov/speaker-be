// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package genjsonschema

import "encoding/json"
import "fmt"

type PromptParameterDefinition struct {
	// The programmical name of the parameter to refer
	Name string `json:"name" yaml:"name" mapstructure:"name"`

	// The description of purpose and structure of the parameter
	ParameterDescription string `json:"parameterDescription" yaml:"parameterDescription" mapstructure:"parameterDescription"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *PromptParameterDefinition) UnmarshalJSON(b []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(b, &raw); err != nil {
		return err
	}
	if _, ok := raw["name"]; raw != nil && !ok {
		return fmt.Errorf("field name in PromptParameterDefinition: required")
	}
	if _, ok := raw["parameterDescription"]; raw != nil && !ok {
		return fmt.Errorf("field parameterDescription in PromptParameterDefinition: required")
	}
	type Plain PromptParameterDefinition
	var plain Plain
	if err := json.Unmarshal(b, &plain); err != nil {
		return err
	}
	*j = PromptParameterDefinition(plain)
	return nil
}
