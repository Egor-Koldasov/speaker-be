{
  "folders": [
    {
      "name": "üîß langtools-utils",
      "path": "langtools-utils"
    },
    {
      "name": "ü§ñ langtools-ai",
      "path": "langtools-ai"
    },
    {
      "name": "üì¶ langtools-main",
      "path": "langtools-main"
    },
    {
      "name": "üîå langtools-mcp",
      "path": "langtools-mcp"
    },
    {
      "name": "üìù Root",
      "path": "."
    }
  ],
  "settings": {
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "mypy-type-checker.importStrategy": "fromEnvironment",
    "ruff.lint.run": "onType",
    "ruff.format.preview": true,
    "ruff.organizeImports": true,
    "[python]": {
      "editor.defaultFormatter": "charliermarsh.ruff",
      "editor.formatOnSave": true,
      "editor.codeActionsOnSave": {
        "source.fixAll": "explicit",
        "source.organizeImports": "explicit"
      }
    },
    "files.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true,
      "**/.ruff_cache": true,
      "**/dist": true,
      "**/build": true,
      "**/*.egg-info": true,
      "**/.venv": false
    },
    "search.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/.pytest_cache": true,
      "**/.mypy_cache": true,
      "**/.ruff_cache": true,
      "**/dist": true,
      "**/build": true,
      "**/*.egg-info": true,
      "**/node_modules": true,
      "**/.git": true
    },
    "terminal.integrated.env.linux": {
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.osx": {
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.windows": {
      "PYTHONPATH": "${workspaceFolder}"
    }
  },
  "extensions": {
    "recommendations": [
      "ms-python.python",
      "ms-python.vscode-pylance",
      "ms-python.mypy-type-checker",
      "charliermarsh.ruff",
      "tamasfe.even-better-toml",
      "github.copilot",
      "github.copilot-chat",
      "eamodio.gitlens",
      "ms-vscode.makefile-tools",
      "visualstudioexptteam.vscodeintellicode",
      "njpwerner.autodocstring"
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Python: Current File",
        "type": "python",
        "request": "launch",
        "program": "${file}",
        "console": "integratedTerminal",
        "justMyCode": false
      },
      {
        "name": "Python: Module",
        "type": "python",
        "request": "launch",
        "module": "langtools.${input:packageName}.${input:moduleName}",
        "console": "integratedTerminal",
        "justMyCode": false
      },
      {
        "name": "Python: Debug Tests",
        "type": "python",
        "request": "launch",
        "module": "pytest",
        "args": [
          "-v",
          "${file}"
        ],
        "console": "integratedTerminal",
        "justMyCode": false
      },
      {
        "name": "MCP Server",
        "type": "python",
        "request": "launch",
        "module": "langtools.mcp.main",
        "console": "integratedTerminal",
        "justMyCode": false,
        "env": {
          "MCP_SERVER_PORT": "5173"
        }
      }
    ],
    "inputs": [
      {
        "id": "packageName",
        "type": "pickString",
        "description": "Select the package",
        "options": [
          "utils",
          "ai",
          "main",
          "mcp"
        ]
      },
      {
        "id": "moduleName",
        "type": "promptString",
        "description": "Enter the module name"
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Run All Tests",
        "type": "shell",
        "command": "pytest",
        "args": [
          "-v",
          "--tb=short"
        ],
        "group": {
          "kind": "test",
          "isDefault": true
        },
        "problemMatcher": "$python"
      },
      {
        "label": "Lint All Packages",
        "type": "shell",
        "command": "bash",
        "args": [
          "-c",
          "for pkg in langtools-utils langtools-ai langtools-main langtools-mcp; do echo \"Linting $pkg...\"; cd $pkg && ./scripts/lint.sh; cd ..; done"
        ],
        "group": "build",
        "problemMatcher": "$python"
      },
      {
        "label": "Build All Packages",
        "type": "shell",
        "command": "bash",
        "args": [
          "-c",
          "for pkg in langtools-utils langtools-ai langtools-main langtools-mcp; do echo \"Building $pkg...\"; cd $pkg && ./scripts/build.sh; cd ..; done"
        ],
        "group": "build",
        "problemMatcher": "$python"
      },
      {
        "label": "Dev Setup",
        "type": "shell",
        "command": "bash",
        "args": [
          "-c",
          "for pkg in langtools-utils langtools-ai langtools-main langtools-mcp; do echo \"Setting up $pkg...\"; cd $pkg && ./scripts/dev.sh; cd ..; done"
        ],
        "group": "build",
        "problemMatcher": "$python"
      }
    ]
  }
}